%!PS-Adobe-2.0 EPSF-2.0
%%Title: smooth_cdf.eps
%%Creator: gnuplot 5.2 patchlevel 6
%%CreationDate: Fri Sep 27 09:57:27 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 251
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 251 lineto 50 251 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (smooth_cdf.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 6)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Sep 27 09:57:27 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica-Bold) findfont 250 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 4032.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1225 750 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 750 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 0)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
/vshift -83 def
1.000 UL
LTb
LCb setrgbcolor
1225 1053 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 1053 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 0.1)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 1356 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 1356 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 0.2)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 1659 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 1659 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 0.3)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 1962 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 1962 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 0.4)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 2266 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 2266 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 0.5)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 2569 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 2569 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 0.6)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 2872 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 2872 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 0.7)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 3175 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 3175 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 0.8)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 3478 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 3478 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 0.9)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 3781 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 3781 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 1)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 750 M
0 63 V
0 2968 R
0 -63 V
stroke
1225 500 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 0)]
] -83.3 MCshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2014 750 M
0 63 V
0 2968 R
0 -63 V
stroke
2014 500 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 200)]
] -83.3 MCshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2803 750 M
0 63 V
0 2968 R
0 -63 V
stroke
2803 500 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 400)]
] -83.3 MCshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3592 750 M
0 63 V
0 2968 R
0 -63 V
stroke
3592 500 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 600)]
] -83.3 MCshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4382 750 M
0 63 V
0 2968 R
0 -63 V
stroke
4382 500 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 800)]
] -83.3 MCshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5171 750 M
0 63 V
0 2968 R
0 -63 V
stroke
5171 500 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 1000)]
] -83.3 MCshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5960 750 M
0 63 V
0 2968 R
0 -63 V
stroke
5960 500 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 1200)]
] -83.3 MCshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6749 750 M
0 63 V
0 2968 R
0 -63 V
stroke
6749 500 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 ( 1400)]
] -83.3 MCshow
/Helvetica-Bold findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1225 3781 N
0 -3031 V
5524 0 V
0 3031 V
-5524 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
225 2265 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica-Bold) 250.0 0.0 true true 0 (CDF)]
] -83.3 MCshow
grestore
/Helvetica-Bold findfont 250 scalefont setfont
LTb
LCb setrgbcolor
3987 125 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 (Average video bitrate variation\(kbps\))]
] -83.3 MCshow
/Helvetica-Bold findfont 250 scalefont setfont
LTb
% Begin plot #1
2.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C
2206 862 BoxF
2243 975 BoxF
2311 1087 BoxF
2514 1199 BoxF
2528 1311 BoxF
2540 1424 BoxF
2587 1536 BoxF
2589 1648 BoxF
2598 1760 BoxF
2636 1873 BoxF
2643 1985 BoxF
2694 2097 BoxF
2701 2209 BoxF
2711 2322 BoxF
2720 2434 BoxF
2869 2546 BoxF
2900 2658 BoxF
2946 2771 BoxF
2951 2883 BoxF
3010 2995 BoxF
3075 3107 BoxF
3203 3220 BoxF
3269 3332 BoxF
4138 3444 BoxF
4206 3556 BoxF
4406 3669 BoxF
4542 3781 BoxF
% End plot #1
% Begin plot #2
2.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C
1262 862 CircleF
1511 975 CircleF
1569 1087 CircleF
1745 1199 CircleF
1759 1311 CircleF
1788 1424 CircleF
1803 1536 CircleF
1819 1648 CircleF
1868 1760 CircleF
1877 1873 CircleF
1905 1985 CircleF
1935 2097 CircleF
1972 2209 CircleF
1985 2322 CircleF
1987 2434 CircleF
1998 2546 CircleF
2009 2658 CircleF
2013 2771 CircleF
2057 2883 CircleF
2062 2995 CircleF
2068 3107 CircleF
2076 3220 CircleF
2078 3332 CircleF
2133 3444 CircleF
2189 3556 CircleF
2227 3669 CircleF
2410 3781 CircleF
% End plot #2
% Begin plot #3
2.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C
1318 862 TriUF
1736 975 TriUF
1808 1087 TriUF
1810 1199 TriUF
1815 1311 TriUF
1826 1424 TriUF
1850 1536 TriUF
1857 1648 TriUF
1871 1760 TriUF
1874 1873 TriUF
1885 1985 TriUF
1887 2097 TriUF
1902 2209 TriUF
1946 2322 TriUF
1965 2434 TriUF
2004 2546 TriUF
2019 2658 TriUF
2029 2771 TriUF
2032 2883 TriUF
2076 2995 TriUF
2083 3107 TriUF
2117 3220 TriUF
2152 3332 TriUF
2169 3444 TriUF
2177 3556 TriUF
2181 3669 TriUF
2197 3781 TriUF
% End plot #3
% Begin plot #4
2.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C
1262 862 DiaF
1722 975 DiaF
1811 1087 DiaF
1942 1199 DiaF
1980 1311 DiaF
2006 1424 DiaF
2008 1536 DiaF
2093 1648 DiaF
2096 1760 DiaF
2100 1873 DiaF
2117 1985 DiaF
2122 2097 DiaF
2157 2209 DiaF
2182 2322 DiaF
2220 2434 DiaF
2233 2546 DiaF
2235 2658 DiaF
2236 2771 DiaF
2254 2883 DiaF
2259 2995 DiaF
2317 3107 DiaF
2320 3220 DiaF
2331 3332 DiaF
2344 3444 DiaF
2422 3556 DiaF
2443 3669 DiaF
2496 3781 DiaF
% End plot #4
% Begin plot #5
2.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C
2215 862 BoxF
2250 975 BoxF
2481 1087 BoxF
2966 1199 BoxF
2989 1311 BoxF
2997 1424 BoxF
3024 1536 BoxF
3085 1760 BoxF
3131 1873 BoxF
3181 1985 BoxF
3208 2097 BoxF
3212 2209 BoxF
3393 2322 BoxF
3397 2434 BoxF
3459 2546 BoxF
3590 2658 BoxF
3640 2883 BoxF
3786 2995 BoxF
4182 3107 BoxF
4233 3220 BoxF
4313 3332 BoxF
4687 3444 BoxF
4856 3556 BoxF
4926 3669 BoxF
6065 3781 BoxF
% End plot #5
% Begin plot #6
2.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C
1262 862 CircleF
1416 975 CircleF
1545 1087 CircleF
1588 1199 CircleF
1602 1311 CircleF
1660 1424 CircleF
1665 1536 CircleF
1706 1648 CircleF
1726 1760 CircleF
1736 1873 CircleF
1755 1985 CircleF
1770 2097 CircleF
1790 2209 CircleF
1797 2322 CircleF
1805 2434 CircleF
1812 2546 CircleF
1813 2658 CircleF
1827 2771 CircleF
1830 2883 CircleF
1866 2995 CircleF
1881 3107 CircleF
1882 3220 CircleF
1936 3332 CircleF
1939 3444 CircleF
1965 3556 CircleF
1999 3669 CircleF
2102 3781 CircleF
% End plot #6
% Begin plot #7
2.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C
1262 862 TriUF
1642 975 TriUF
1753 1087 TriUF
1801 1199 TriUF
1806 1311 TriUF
1809 1424 TriUF
1819 1536 TriUF
1828 1648 TriUF
1866 1760 TriUF
1871 1873 TriUF
1879 1985 TriUF
1889 2097 TriUF
1895 2209 TriUF
1913 2434 TriUF
1924 2546 TriUF
1931 2658 TriUF
1940 2771 TriUF
1949 2883 TriUF
1958 2995 TriUF
1984 3107 TriUF
1993 3220 TriUF
1995 3332 TriUF
1997 3444 TriUF
2019 3556 TriUF
2027 3669 TriUF
2163 3781 TriUF
% End plot #7
% Begin plot #8
2.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C
1262 862 DiaF
1619 975 DiaF
1654 1087 DiaF
1662 1199 DiaF
1669 1311 DiaF
1671 1424 DiaF
1687 1536 DiaF
1690 1648 DiaF
1698 1760 DiaF
1719 1873 DiaF
1737 2097 DiaF
1742 2209 DiaF
1755 2322 DiaF
1777 2434 DiaF
1785 2546 DiaF
1813 2658 DiaF
1836 2771 DiaF
1840 2883 DiaF
1871 2995 DiaF
1881 3107 DiaF
1922 3220 DiaF
1952 3332 DiaF
1999 3444 DiaF
2000 3556 DiaF
2095 3669 DiaF
2151 3781 DiaF
% End plot #8
% Begin plot #9
2.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C
LCb setrgbcolor
5936 2188 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 (BB)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C
6086 2188 M
363 0 V
6267 2188 BoxF
% End plot #9
% Begin plot #10
2.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C
LCb setrgbcolor
5936 1938 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 (MF)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C
6086 1938 M
363 0 V
6267 1938 CircleF
% End plot #10
% Begin plot #11
2.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C
LCb setrgbcolor
5936 1688 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 (MR)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C
6086 1688 M
363 0 V
6267 1688 TriUF
% End plot #11
% Begin plot #12
2.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C
LCb setrgbcolor
5936 1438 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 (P)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C
6086 1438 M
363 0 V
6267 1438 DiaF
% End plot #12
% Begin plot #13
7.000 UL
LTb
0.00 0.00 1.00 C
LCb setrgbcolor
5936 1188 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 (HTTP)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
7.000 UL
LTb
0.00 0.00 1.00 C
6086 1188 M
363 0 V
% End plot #13
% Begin plot #14
stroke
LTb
1.00 0.00 0.00 C
LCb setrgbcolor
5936 938 M
[ [(Helvetica-Bold) 250.0 0.0 true true 0 (QUIC)]
] -83.3 MRshow
/Helvetica-Bold findfont 250 scalefont setfont
7.000 UL
LTb
1.00 0.00 0.00 C
6086 938 M
363 0 V
% End plot #14
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1225 3781 N
0 -3031 V
5524 0 V
0 3031 V
-5524 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica-Bold
