%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot_segment_1110016.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sun Apr 16 16:45:52 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 554
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -133 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot_segment_1110016.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (13CS10021 - Ramanth Gajula)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Apr 16 16:45:52 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica Bold) findfont 400 scalefont setfont
1.000 UL
LTb
2512 1683 M
63 0 V
7697 0 R
-63 0 V
stroke
2272 1683 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 0)]
] -133.3 MRshow
1.000 UL
LTb
2512 2393 M
63 0 V
7697 0 R
-63 0 V
stroke
2272 2393 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 0.1)]
] -133.3 MRshow
1.000 UL
LTb
2512 3102 M
63 0 V
7697 0 R
-63 0 V
stroke
2272 3102 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 0.2)]
] -133.3 MRshow
1.000 UL
LTb
2512 3812 M
63 0 V
7697 0 R
-63 0 V
stroke
2272 3812 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 0.3)]
] -133.3 MRshow
1.000 UL
LTb
2512 4521 M
63 0 V
7697 0 R
-63 0 V
stroke
2272 4521 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 0.4)]
] -133.3 MRshow
1.000 UL
LTb
2512 5231 M
63 0 V
7697 0 R
-63 0 V
stroke
2272 5231 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 0.5)]
] -133.3 MRshow
1.000 UL
LTb
2512 5941 M
63 0 V
7697 0 R
-63 0 V
stroke
2272 5941 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 0.6)]
] -133.3 MRshow
1.000 UL
LTb
2512 6650 M
63 0 V
7697 0 R
-63 0 V
stroke
2272 6650 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 0.7)]
] -133.3 MRshow
1.000 UL
LTb
2512 7360 M
63 0 V
7697 0 R
-63 0 V
stroke
2272 7360 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 0.8)]
] -133.3 MRshow
1.000 UL
LTb
2512 8069 M
63 0 V
7697 0 R
-63 0 V
stroke
2272 8069 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 0.9)]
] -133.3 MRshow
1.000 UL
LTb
2512 8779 M
63 0 V
7697 0 R
-63 0 V
stroke
2272 8779 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 1)]
] -133.3 MRshow
1.000 UL
LTb
2512 1683 M
0 63 V
0 7033 R
0 -63 V
stroke
2512 1283 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 0)]
] -133.3 MCshow
1.000 UL
LTb
3288 1683 M
0 63 V
0 7033 R
0 -63 V
stroke
3288 1283 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 20)]
] -133.3 MCshow
1.000 UL
LTb
4064 1683 M
0 63 V
0 7033 R
0 -63 V
stroke
4064 1283 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 40)]
] -133.3 MCshow
1.000 UL
LTb
4840 1683 M
0 63 V
0 7033 R
0 -63 V
stroke
4840 1283 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 60)]
] -133.3 MCshow
1.000 UL
LTb
5616 1683 M
0 63 V
0 7033 R
0 -63 V
stroke
5616 1283 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 80)]
] -133.3 MCshow
1.000 UL
LTb
6392 1683 M
0 63 V
0 7033 R
0 -63 V
stroke
6392 1283 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 100)]
] -133.3 MCshow
1.000 UL
LTb
7168 1683 M
0 63 V
0 7033 R
0 -63 V
stroke
7168 1283 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 120)]
] -133.3 MCshow
1.000 UL
LTb
7944 1683 M
0 63 V
0 7033 R
0 -63 V
stroke
7944 1283 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 140)]
] -133.3 MCshow
1.000 UL
LTb
8720 1683 M
0 63 V
0 7033 R
0 -63 V
stroke
8720 1283 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 160)]
] -133.3 MCshow
1.000 UL
LTb
9496 1683 M
0 63 V
0 7033 R
0 -63 V
stroke
9496 1283 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 180)]
] -133.3 MCshow
1.000 UL
LTb
10272 1683 M
0 63 V
0 7033 R
0 -63 V
stroke
10272 1283 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 ( 200)]
] -133.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
2512 8779 N
0 -7096 V
7760 0 V
0 7096 V
-7760 0 V
Z stroke
LCb setrgbcolor
872 5231 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica Bold) 400.0 0.0 true true 0 (CDF)]
] -133.3 MCshow
grestore
LTb
LCb setrgbcolor
6392 683 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 (Segment length \(in seconds\))]
] -133.3 MCshow
LTb
6392 9379 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 (Size of Segment Requested - 1084 kbps)]
] -133.3 MCshow
1.000 UP
1.000 UL
LTb
8.000 UL
LT0
1.00 0.00 0.00 C LTb
8529 8516 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 (QUIC)]
] -133.3 MRshow
LT0
1.00 0.00 0.00 C 8769 8516 M
1023 0 V
2512 1690 M
105 2 V
5 2 V
16 2 V
68 80 V
0 232 V
1 4 V
0 14 V
1 33 V
0 69 V
1 122 V
0 259 V
2 863 V
1 15 V
0 23 V
7 307 V
0 133 V
0 169 V
0 323 V
1 13 V
0 9 V
2 67 V
82 2 V
96 5 V
5 2 V
0 2 V
91 2 V
99 5 V
4 4 V
3 11 V
6 12 V
25 13 V
0 20 V
93 2 V
6 2 V
57 27 V
4 2 V
0 7 V
2 24 V
3 18 V
0 29 V
1 2 V
0 5 V
8 247 V
17 2 V
16 69 V
0 42 V
1 45 V
0 73 V
2 7 V
0 7 V
7 13 V
79 2 V
33 2 V
20 132 V
1 182 V
2 2 V
3 7 V
0 13 V
3 5 V
0 7 V
4 146 V
0 81 V
1 2 V
4 2 V
5 245 V
42 46 V
0 92 V
1 82 V
0 40 V
3 5 V
9 53 V
116 36 V
1 135 V
6 11 V
0 5 V
4 4 V
5 60 V
1 7 V
0 7 V
11 325 V
6 2 V
44 116 V
1 115 V
4 7 V
10 64 V
101 25 V
1 105 V
17 2 V
0 2 V
15 274 V
7 2 V
51 38 V
0 20 V
1 26 V
0 63 V
5 2 V
0 2 V
12 58 V
85 36 V
2 40 V
19 2 V
16 156 V
stroke 4101 8025 M
8 2 V
1 2 V
57 9 V
0 25 V
2 40 V
0 22 V
19 31 V
70 20 V
2 13 V
21 3 V
19 73 V
9 2 V
7 2 V
6 3 V
52 22 V
2 15 V
6 3 V
16 29 V
54 17 V
2 29 V
24 3 V
8 2 V
13 53 V
10 2 V
72 9 V
0 5 V
2 15 V
0 16 V
7 2 V
17 16 V
39 20 V
2 11 V
49 31 V
12 2 V
79 7 V
3 7 V
0 6 V
26 5 V
23 11 V
56 29 V
102 15 V
28 5 V
8 2 V
3 2 V
58 11 V
110 3 V
0 6 V
31 7 V
57 11 V
116 2 V
3 3 V
33 2 V
47 4 V
124 2 V
3 5 V
71 7 V
120 2 V
16 2 V
63 4 V
85 3 V
30 2 V
3 2 V
26 2 V
55 3 V
54 2 V
99 4 V
45 5 V
162 2 V
332 4 V
102 3 V
286 2 V
587 2 V
383 2 V
588 3 V
576 2 V
194 2 V
stroke
LT1
0.00 0.00 1.00 C LTb
8529 8116 M
[ [(Helvetica Bold) 400.0 0.0 true true 0 (TCP)]
] -133.3 MRshow
LT1
0.00 0.00 1.00 C 8769 8116 M
1023 0 V
2622 1685 M
23 1 V
7 4 V
33 2 V
21 172 V
0 457 V
1 28 V
0 64 V
1 30 V
0 83 V
1 138 V
0 262 V
0 7 V
0 16 V
2 1287 V
1 5 V
0 3 V
7 221 V
0 120 V
0 200 V
0 367 V
1 12 V
0 7 V
2 254 V
8 2 V
23 1 V
49 2 V
103 2 V
0 2 V
4 20 V
10 2 V
7 4 V
0 7 V
0 10 V
0 5 V
5 7 V
79 2 V
64 2 V
28 19 V
6 12 V
4 2 V
21 22 V
0 19 V
8 4 V
11 2 V
137 15 V
4 7 V
2 4 V
3 29 V
0 56 V
1 5 V
8 231 V
33 79 V
0 31 V
1 31 V
0 80 V
2 9 V
0 9 V
7 7 V
30 1 V
102 91 V
1 113 V
5 7 V
0 7 V
3 3 V
0 2 V
4 101 V
0 52 V
10 182 V
26 2 V
16 32 V
0 80 V
1 50 V
0 21 V
3 2 V
0 8 V
9 51 V
69 1 V
27 2 V
20 21 V
1 87 V
6 2 V
0 1 V
9 32 V
1 1 V
0 2 V
11 214 V
6 2 V
44 76 V
1 89 V
4 2 V
10 78 V
101 24 V
1 61 V
8 2 V
3 2 V
21 194 V
7 2 V
51 37 V
0 17 V
1 19 V
0 47 V
17 45 V
stroke 3979 8031 M
85 12 V
2 37 V
20 2 V
5 1 V
10 105 V
8 2 V
58 13 V
0 16 V
2 23 V
0 19 V
19 24 V
70 19 V
2 19 V
40 63 V
74 5 V
2 23 V
6 2 V
0 1 V
16 19 V
54 20 V
2 13 V
24 2 V
21 51 V
10 1 V
72 7 V
0 4 V
2 3 V
0 6 V
24 10 V
39 12 V
2 5 V
49 23 V
12 2 V
79 3 V
3 7 V
0 4 V
26 7 V
23 1 V
2 6 V
54 31 V
12 2 V
90 15 V
28 2 V
8 5 V
61 12 V
110 6 V
0 3 V
23 2 V
8 1 V
57 9 V
116 4 V
3 3 V
0 2 V
10 2 V
23 1 V
47 4 V
124 2 V
3 1 V
71 11 V
120 1 V
3 2 V
13 4 V
63 1 V
144 2 V
55 7 V
153 4 V
45 1 V
110 2 V
259 2 V
125 2 V
776 1 V
194 2 V
199 2 V
1741 2 V
388 1 V
8 2 V
stroke
1.000 UL
LTb
2512 8779 N
0 -7096 V
7760 0 V
0 7096 V
-7760 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica Bold
